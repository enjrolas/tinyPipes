#include <avr/eeprom.h>
char samplePeriods;

#define DATA_START 8

#define PERIOD 1  //seconds between samples
#define SAMPLE_PERIOD 10800  //three hours
//#define SAMPLE_PERIOD 10  // total seconds 
#define AVAILABLE_EEPROM 1000-DATA_START,  //there are 1000 available bytes of EEPROM
#define SAMPLE_SIZE 16
#define SAMPLES 62 

struct Sample
{
  float batteryVoltage;  //average battery voltage over the period
  float panelVoltage;  //average panel voltage over the period
  float panelEnergy;  //total energy generated by the panel over the period(estimate)
  float batteryEnergy;  //total energy used from the battery over the period (estimate)
};
void readIndex()
{
  eeprom_read_block((void*) &samplePeriods, 0, sizeof(samplePeriods));
}

void writeIndex()
{
  eeprom_write_block((const void*) &samplePeriods, 0, sizeof(samplePeriods));
}


void saveSample(struct Sample sam)
{
  eeprom_write_block((const void*)&sam, (void*)(DATA_START+(samplePeriods%((AVAILABLE_EEPROM-DATA_START)/sizeof(sam))*(sizeof(sam)))), sizeof(sam));  
  samplePeriods++;
  if(samplePeriods>SAMPLES)
    samplePeriods=0;
  writeIndex();
}

void readSample(struct Sample& sam, unsigned char index)
{
//  Serial<<sizeof(sam)<<endl;
  eeprom_read_block((void*)&sam, (void*)(DATA_START+index*(sizeof(sam))), sizeof(sam));  
}


